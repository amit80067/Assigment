events {
    worker_connections 1024;
}

http {
    # Enhanced logging format with more details
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Main access log
    access_log /var/log/nginx/access.log detailed;
    
    # Error log with debug level
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain application/json;
    
    # Upstream definitions for better logging
    upstream service_1_backend {
        server service_1:8001;
    }
    
    upstream service_2_backend {
        server service_2:8002;
    }

    server {
        listen 80;
        
        # Server-level logging
        access_log /var/log/nginx/access.log detailed;
        
        # Health check endpoint for nginx itself
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        location /service1/ {
            proxy_pass http://service_1_backend/;
            
            # Proxy headers for better logging
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /service2/ {
            proxy_pass http://service_2_backend/;
            
            # Proxy headers for better logging
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Default location for root path
        location / {
            return 200 '{"message":"Multi-Service Application","nginx":"healthy","services":{"service1":"http://localhost:8080/service1/","service2":"http://localhost:8080/service2/"}}';
            add_header Content-Type application/json;
        }
    }
}
